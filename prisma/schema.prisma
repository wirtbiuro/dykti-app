// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  email String? @unique
  username String @unique
  password String?
  role String[]
  refreshes Refresh[] @relation("UserRefreshes")
  createdSteps Step[] @relation("UserCreatedSteps")
}

model Refresh{
  id String @id @default(uuid())
  session String @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  userId Int?
  user User? @relation("UserRefreshes", fields: [userId], references: [id])
}

model Step{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  passedTo String?
  createdByStep String?
  maxPromotion String?
  shouldConfirmView Boolean?
  isCompleted Boolean?
  orderId Int
  order Order? @relation(fields: [orderId], references: [id])
  formStepClientName String?
  formStepPhone String?
  formStepEmail String?
  formStepCity String?
  formStepAddress String?
  formStepMeetingDate DateTime?
  formStepWhereClientFound String?
  formStepComment String?
  beffaringStepWasThereMeeting Boolean?
  beffaringStepOfferDate DateTime?
  beffaringStepInfoSendingDate DateTime?
  beffaringStepComment String?
  beffaringStepDocsSendDate DateTime?
  offerStepAreBefDocsGood Boolean?
  offerStepBefComments String?
  offerStepOfferDate DateTime?
  offerStepComment String?
  contractStepOfferSendingDate DateTime?
  contractStepAreOfferChanges Boolean?
  contractStepOfferChangesComment String?
  contractStepIsOfferAccepted Boolean?
  contractStepSentForVerificationDate DateTime?
  contractStepOfferRejectionReason String?
  contractCheckerStepIsContractChecked Boolean?
  contractCheckerStepWorkStartDate DateTime?
  contractCheckerStepWorkEndDate DateTime?
  contractCheckerStepComments String?
  contractCreatorStepContractSendingDate DateTime?
  contractCreatorStepIsContractAccepted Boolean?
  contractCreatorStepContractRejectionReason String?
  stepCreatorId Int?
  stepCreator User? @relation("UserCreatedSteps", fields: [stepCreatorId], references: [id])
  workStepTeam String?
  workStepWorkStartDate DateTime?
  workStepWorkEndDate DateTime?
  workStepContractEdits String?
  questionnaireStepIsAcceptanceReport Boolean?
  questionnaireStepHaveClientReceviedDocs Boolean?
  questionnaireStepArePaymentsReceived Boolean?
  questionnaireStepIsClientSatisfied Boolean?
  questionnaireStepSatisfaction String?
  questionnaireStepOtherSatisfaction String?
  questionnaireStepDissatisfaction String?
  questionnaireStepOtherDissatisfaction String?
  referenceStepWasSentRequest Boolean?
  referenceStepIsClientReference Boolean?
  referenceStepReferenceLocation String?
}

model Order{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  steps Step[]
}