// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  email String? @unique
  username String @unique
  password String?
  role String?
  refreshes Refresh[] @relation("UserRefreshes")
  createdFormSteps Step[] @relation("UserCreatedFormSteps")
  createdBefaringSteps Step[] @relation("UserCreatedBefaringSteps")
  createdOfferSteps Step[] @relation("UserCreatedOfferSteps")
}

model Refresh{
  id String @id @default(uuid())
  session String @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  userId Int?
  user User? @relation("UserRefreshes", fields: [userId], references: [id])
}

model Step{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())

  formStepCreatedAt String?
  formStepClientName String?
  formStepPhone String?
  formStepEmail String?
  formStepCity String?
  formStepAddress String?
  formStepMeetingDate DateTime?
  formStepWhereClientFound String?
  formStepCreatorId Int
  formStepCreator User @relation("UserCreatedFormSteps", fields: [formStepCreatorId], references: [id])
  formStepIsCompleted Boolean?
  formStepIsProceedToNext Boolean?
  formStepComment String?
  formStepShouldPerfomerConfirmView Boolean?

  beffaringStepPrevStepConfirmationDate DateTime?
  beffaringStepCreatedAt DateTime?
  beffaringStepOfferDate DateTime?
  beffaringStepInfoSendingDate DateTime?
  beffaringStepCreatorId Int?
  beffaringStepCreator User? @relation("UserCreatedBefaringSteps", fields: [beffaringStepCreatorId], references: [id])
  beffaringStepIsCompleted Boolean?
  beffaringStepIsProceedToNext Boolean?
  beffaringStepComment String?
  beffaringStepShouldPerfomerConfirmView Boolean?
  beffaringStepDocsSendDate DateTime?

  offerStepPrevStepConfirmationDate DateTime?
  offerStepAreBefDocsGood Boolean?
  offerStepBefComments String?
  offerStepOfferDate DateTime?
  offerStepComment String?
  offerStepIsCompleted Boolean?
  offerStepIsProceedToNext Boolean?
  offerStepShouldPerfomerConfirmView Boolean?
  offerStepCreatedAt DateTime?
  offerStepCreatorId Int?
  offerStepCreator User? @relation("UserCreatedOfferSteps", fields: [offerStepCreatorId], references: [id])

  orderId Int
  order Order? @relation(fields: [orderId], references: [id])
}

model Order{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  steps Step[]
}