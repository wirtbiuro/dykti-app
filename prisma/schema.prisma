// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  email String? @unique
  username String @unique
  password String?
  name String?
  role String[]
  refreshes Refresh[] @relation("UserRefreshes")
  createdSteps Step[] @relation("UserCreatedSteps")
}

model Refresh{
  id String @id @default(uuid())
  session String @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  userId Int?
  user User? @relation("UserRefreshes", fields: [userId], references: [id])
}

model Step{
  id Int @id @default(autoincrement())
  orderId Int?
  order Order? @relation("OrderSteps", fields: [orderId], references: [id])
  currentOrder Order? @relation("OrderCurrentStep")
  formStepClientName String?
  formStepPhone String?
  formStepEmail String?
  formStepCity String?
  formStepAddress String?
  formStepMeetingDate DateTime?
  formStepWhereClientFound String?
  formStepComment String?
  beffaringStepMeetingDate DateTime?
  beffaringStepWasThereMeeting Boolean?
  beffaringStepOfferDate DateTime?
  beffaringStepInfoSendingDate DateTime?
  beffaringStepComment String?
  beffaringStepDocsSendDate DateTime?
  offerStepAreBefDocsGood Boolean?
  offerStepBefComments String?
  offerStepOfferDate DateTime?
  offerStepComment String?
  offerStepBefaringReturnDate String?
  contractStepOfferSendingDate DateTime?
  contractStepAreOfferChanges Boolean?
  contractStepOfferChangesComment String?
  contractStepIsOfferAccepted Boolean?
  contractStepSentForVerificationDate DateTime?
  contractStepOfferRejectionReason String?
  contractCheckerStepIsContractChecked Boolean?
  contractCheckerStepWorkStartDate DateTime?
  contractCheckerStepWorkEndDate DateTime?
  contractCheckerStepComments String?
  contractCreatorStepContractSendingDate DateTime?
  contractCreatorStepIsContractAccepted Boolean?
  contractCreatorStepContractRejectionReason String?
  stepCreatorId Int?
  stepCreator User? @relation("UserCreatedSteps", fields: [stepCreatorId], references: [id])
  workStepTeam Worker[] 
  workStepWorkStartDate DateTime?
  workStepWorkEndDate DateTime?
  workStepContractEdits String?
  questionnaireStepIsAcceptanceReport Boolean?
  questionnaireStepHaveClientReceviedDocs Boolean?
  questionnaireStepArePaymentsReceived Boolean?
  questionnaireStepSatisfaction String[]
  questionnaireStepOtherSatisfaction String?
  questionnaireStepDissatisfaction String[]
  questionnaireStepOtherDissatisfaction String?
  referenceStepWasSentRequest Boolean?
  referenceStepIsClientReference Boolean?
  referenceStepReferenceLocation String[]
  createdAt DateTime @default(now())
  passedTo String?
  createdByStep String?
  maxPromotion String?
  returnStep String?
  shouldConfirmView Boolean?
  isCompleted Boolean?
  branchIdx Int?
  deadline DateTime?
  nextDeadline DateTime?
}

model Order{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  steps Step[] @relation("OrderSteps")
  currentStep Step @relation("OrderCurrentStep", fields: [currentStepId], references: [id])
  currentStepId Int @unique
  services Service[] @relation("OrderServices")
}

model Service{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  orderId Int?
  order Order? @relation("OrderServices", fields: [orderId], references: [id])
  currentServiceStepId Int @unique
  current ServiceStep @relation("ServiceCurrent", fields: [currentServiceStepId], references: [id])
  all ServiceStep[] @relation("ServiceAll")
}

model ServiceStep{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  comment String?
  damage String?
  fixingDate DateTime?
  team Worker[]
  currentService Service? @relation("ServiceCurrent")
  serviceId Int?
  service Service? @relation("ServiceAll", fields: [serviceId], references: [id])
}

model Worker{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  name String?
  username String @unique
  steps Step[]
  serviceSteps ServiceStep[]
}